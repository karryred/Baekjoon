N=int(input())
cost=list(map(int,input().split()))
limit=int(input())

if sum(cost)<limit:
    print(max(cost))
else:
    low=0
    high=max(cost)
    res=0
    
    while low<=high:
        total=0
        mid = (low+high)//2
        
        for i in cost:
            total+=min(i,mid)
        
        if total>limit:
            high=mid-1
        else:
            low=mid+1
            res=mid

    print(res)

"""
이진 탐색(Binary Search)을 사용하는 문제들은 특정한 특징들을 가지고 있습니다.
이진 탐색을 사용하는 문제들의 특징을 몇 가지 나열해보면 다음과 같습니다:

1. 탐색 범위가 크고, 정답이 특정한 범위 안에 존재함: 
이진 탐색은 큰 범위의 데이터 중에서 특정 값을 빠르게 찾아낼 때 효율적입니다. 
따라서 탐색 범위가 크고, 그 안에 정답이 있을 때 이진 탐색을 생각해보는 것이 좋습니다.
2. 문제가 정렬된 데이터를 다루거나, 정렬이 가능한 경우: 
이진 탐색은 정렬된 데이터에서 특정한 값을 빠르게 찾는 알고리즘입니다. 따라서 문제가 정렬된 데이터를 다루거나, 정렬하여 문제를 해할 수 있는 경우 이진 탐색을 사용하면 좋습니다.
3. 문제의 해결 방법이 '예' 또는 '아니오'로 답변할 수 있는 질문을 통해 접근할 수 있는 경우: 
이진 탐색은 '예' 또는 '아니오'로 답변할 수 있는 질문을 통해 탐색 범위를 절반으로 줄여나가는 방식으로 동작합니다.
 따라서 이러한 방식으로 문제를 접근할 수 있다면 이진 탐색을 활용할 수 있을 것입니다.
백준 2512번 문제의 경우, 예산 상한액을 찾는 문제이므로 '예산 상한액이 x일 때, 모든 예산 요청을 배정할 수 있는가?' 라는 '예' 또는 '아니오'의 질문으로 접근할 수 있습니다. 
따라서 이 문제는 이진 탐색을 사용할 수 있습니다.
"""